// eslint-disable-next-line max-len
export const pageInfoType = `// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!! THIS FILE WAS AUTOGENERATED, DO NOT EDIT MANUALLY !!!!!!!!!!!!!!!!!!!!!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/* eslint-disable unicorn/no-abusive-eslint-disable */
/* eslint-disable */

import {
    Field,
    Int,
    ObjectType,
} from 'type-graphql'

@ObjectType('PageInfo')
class PageInfo {
    @Field(() => Boolean)
    public hasNextPage: boolean

    @Field(() => Boolean)
    public hasPreviousPage: boolean

    @Field(() => String, { nullable: true })
    public startCursor?: string | null

    @Field(() => String, { nullable: true })
    public endCursor?: string | null
}
`

export const generateEdgesType = (name: string) => {
    return `
import { ${name}Type } from '../../resolvers'

@ObjectType('${name}Edge')
class ${name}Edge {
    @Field(() => String)
    public cursor: string

    @Field(() => ${name}Type)
    public node: ${name}Type
}

@ObjectType('Paginated${name}Type')
export class Paginated${name}Type {
    @Field(() => Int)
    public totalCount: number

    @Field(() => PageInfo)
    public pageInfo: PageInfo

    @Field(() => [${name}Edge])
    public edges: ${name}Edge[]
}
`
}
